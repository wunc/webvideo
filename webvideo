#!/bin/bash

# ============================================================================
# Wun's script for converting video to the proper format for HTML5 web viewing
# ============================================================================
# input: filenames to convert
# options: --mp4 --webm --flv
# output: mp4, webm, & flv converted files
#
# requirements: ffmpeg (libx264,libfaac,libvpx,libvorbis)

MP4=false		# create the MP4 file (for IE, Safari, Chrome, iOS, Android)
WebM=false		# create the WebM file (for Firefox, Chrome, Opera)
FLV=false		# create an FLV file (for flash fallback)

threads=4		# CPU threads to use to encode
vbitrate=800k	# video bitrate
abitrate=128k	# audio bitrate
buffer=1400k	# should be ~2x vbitrate
height=480		# set the height
width=854		# set the width (set to -1 to auto-calculate)

common_options="-pix_fmt yuv420p -b:v $vbitrate -qmin 10 -qmax 42 -maxrate $vbitrate -bufsize $buffer -threads $threads -vf scale=$width:$height"
video_h264="-codec:v libx264 -profile:v baseline -preset slow"
video_vpx="-codec:v libvpx -quality good -cpu-used 0"
audio_aac="-codec:a libfdk_aac -b:a $abitrate"
audio_vorbis="-codec:a libvorbis -b:a $abitrate"

for args in "$@"
do
	# read the - arguments to decide output formats desired
	case $args in
        -m | --mp4 )    MP4=true
						continue
                                ;;
        -w | --webm )   WebM=true
						continue
                                ;;
        -f | --flv )    FLV=true
						continue
								;;
        -na | --noaudio )	audio_aac="-an"
							audio_vorbis="-an"
							continue
								;;
    esac

    fullpath=$args
	# extract the path and filename of the argument
    filename="${fullpath##*/}"
    dir="${fullpath:0:${#fullpath} - ${#filename}}"
    base="${filename%.[^.]*}"

	# Convert to MP4 with ffmpeg
	if $MP4; then
		video_option="-codec:v libx264 -profile:v baseline -preset slow"
		echo "MP4: =========== Converting $fullpath to $dir$base-web.mp4 =========="

		echo "MP4: ====================================== Pass 1 =========================================="
		ffmpeg -i "$fullpath" $video_h264 $common_options -an -pass 1 -f mp4 -y /dev/null 2>&1 | grep "frame="
		echo "MP4: ====================================== Pass 2 =========================================="
		ffmpeg -i "$fullpath" $video_h264 $common_options $audio_aac -pass 2 -f mp4 -movflags faststart -y "$dir$base"-web.mp4 2>&1 | grep "frame="
	fi

	# Convert to WebM with ffmpeg
	if $WebM; then
		echo "WebM: ========== Converting $fullpath to $dir$base-web.webm =========="
		
		echo "WebM: ====================================== Pass 1 =========================================="
		ffmpeg -i "$fullpath" $video_vpx $common_options -an -pass 1 -f webm -y /dev/null
		echo "WebM: ====================================== Pass 2 =========================================="
		ffmpeg -i "$fullpath" $video_vpx $common_options $audio_vorbis -pass 2 -f webm -y "$dir$base"-web.webm
	fi

	# Convert to FLV with ffmpeg
	if $FLV; then
		echo "FLV: =========== Converting $fullpath to $dir$base-web.flv ==========="

		echo "FLV: ====================================== Pass 1 =========================================="
		ffmpeg -i "$fullpath" $video_h264 $common_options -an -pass 1 -f flv -loglevel warning -y /dev/null
		echo "FLV: ====================================== Pass 2 =========================================="
		ffmpeg -i "$fullpath" $video_h264 $common_options $audio_aac -pass 2 -f flv -movflags faststart -y "$dir$base"-web.flv

	fi

	# Remove the ffmpeg log files
	rm -rf ffmpeg2pass*
	echo "================================ All done! ================================="
done
